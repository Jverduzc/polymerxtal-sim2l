AtomTypeList
	- create

Bond 
	- create
	- no freeBondList - use __del__ 

BondTypeList
	- create

Chain
	- no destroyChain - use __del__ 

Domain
	- no destroyDomain - use __del__ 

ExclCylinder 
	- create
	- no destroyExclCylinder - use __del__ 
	- no createExclCylinder - use create

ExclSlab 
	- create
	- no destroyExclSlab - use __del__ 

ExclSphere 
	- create

Holder
	- no destroyHolder - use __del__

Monomer 
	- create
	- no destroyMonomer - use __del__ 

OccAtom 
	- create

Params
	- no initParams - use __init__ 
	- no freeParams - use __del__ 

PolymerSystem
	- no initSystem

Scanner 
	- no destroyScanner - use __del__ 

Stereo 
	- create
	- no destroyStereo - use __del__ 

Torsion
	- TORSION_FIXED - Torsion(0)
	- TORSION_FREE - Torsion(1)
	- TORSION_ENERGY - Torsion(2)
	- TORSION_ENERGY_CALC - Torsion(3)

Vector 
	- np.zeros(3)
	- .x - [0]
	- .y - [1]
	- .z - [2]
	- subtractVectors(self, lhs, rhs) - use self = lhs - rhs
	- crossVectors(self, lhs, rhs) - use self = np.cross(lhs, rhs)
	- normalizeVector(self) - use self /= np.linalg.norm(self)
	- getLength(self) - use np.linalg.norm(self)
	- scaleVector(self, scale) - use self *= scale
	- addVectors(self, lhs, rhs) - use self = lhs + rhs
	- getDist(v1, v2) - np.linalg.norm(v1 - v2)
	- getSqDist(v1, v2) - np.linalg.norm(v1 - v2)**2
	- getAngle(v1, v2) - calculate_angle(-v1, np.zeros(3), -v2)

ZMatrix
	- no destroyZMatrix - use __del__ 

ZVar
	- create

normal:
acos - np.arccos
allocMem(size) - = size
cbrt() - np.cbrt()
ceil - np.ceil
choke - use raise *Error
copyStr(s) - s
cos - np.cos
createRNG(i) - = i
dir - directory
errno - errno.errorcode
EXIT_SUCCESS - 0
exp() - np.exp()
fclose - f.file.close()
file - f
free - del
FREE(ptr) - = {}
getNormalRand(sys.rngs[0], mu, sigma) - random.gauss(mu, sigma)
gettimeofday(t.tv, NULL) - t.tv=time.time()
getUniformRand(rng) - random.random()
isEqual - ==
isnan - np.isnan
len - leng
M_PI - np.pi
max - maxi
min - mini
NEG_0 - 0
open(".", O_RDONLY) - os.getcwd()
open(dir, O_RDONLY) - dir
(Real)i - float(i)
Rint - numpy.rint()
SHOW_USAGE(stderr) - SHOW_USAGE(stdout) - SHOW_USAGE(FILE())
sin - np.sin
stderr - FILE()
stdout - FILE()
str - string
STR_TO_REAL - float()
strcmp(a,b)==0 - ==
strerror() - os.strerror()
snprintf(prevtok, TOKLEN, "%s", s->tokstr) - prevtok="%s" %s->tokstr
sqrt - np.sqrt
strrchr(a,'c') - a.rfind('c')
sys - polysys
vfprintf(log_file, msg, ap) - log_file.fprintf(msg)
yylex_destroy - =''
< ZERO_TOL - <=0
> ZERO_TOL - >0

no:
fflush(f)
prog_cc_line
prog_ld_line
prog_name
prog_version
REAL_STR

special:
1.
C:
----
ang = STR_TO_REAL(s->tokstr, &q);
if ('\0' != *q)  /* not a number */
{
	pushToken(s);
	ang = -REAL_MAX;
}
----
Python:
----
from .params import is_number
if is_number(s.tokstr):
	ang = float(s.tokstr)
else:
	s.pushToken()
	ang = -REAL_MAX
----
2.
C:
----
if (prevdir > -1)
   close(prevdir);
prevdir = open(".", O_RDONLY);
if (-1 == prevdir)
   choke("Unable to open current directory: %s", strerror(errno));
----
Python:
----
prevdir = os.getcwd()
if not prevdir:
	raise IOError("Unable to open current directory: %s" %os.strerror(errno.EIO))
----
3.
C:
----
int fd = open(dir, O_RDONLY);

if (-1 == fd)
   choke("Unable to open %s: %s", dir, strerror(errno));
if (-1 == fchdir(fd))
   choke("Unable to change directory to %s: %s", dir, strerror(errno));
----
Python:
----
from .unistd import fchdir
fd = directory

if not os.path.exists(fd):
	raise IOError("Unable to open %s: %s" %(directory, os.strerror(errno.ENOENT)))
if -1 == fchdir(fd):
	raise IOError("Unable to change directory to %s: %s" %(directory, os.strerror(errno.EIO)))
----
4.
++k :- this is pre-increment, means the value of variable is first incremented to +1 and then the result is printed.
For eg. Let b=++k. Where k=4, then
b= 5 . Because first 4 is incremented to +1 i.e 5 and then the result 5 is printed.

K++ :- this is post-increment, means first the value of variable is printed and then incremented to +1.
For eg. Let b=k++, where k=4.
b=4, because first the value is printed i.e 4 and then incremented to 5.